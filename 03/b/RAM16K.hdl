// This file is part of www.nand2tetris.org
// and the book "The Elements of Computing Systems"
// by Nisan and Schocken, MIT Press.
// File name: projects/03/b/RAM16K.hdl

/**
 * Memory of 16K registers, each 16 bit-wide. Out holds the value
 * stored at the memory location specified by address. If load==1, then 
 * the in value is loaded into the memory location specified by address 
 * (the loaded value will be emitted to out from the next time step onward).
 */

CHIP RAM16K {
    IN in[16], load, address[14];
    OUT out[16];

    PARTS:
    DMux8Way(in=load, sel=address[11..13], a=loadR1, b=loadR2, c=loadR3, d=loadR4, e=loadR5, f=loadR6, g=loadR7, h=loadR8);
    RAM4K(in=in, load=loadR1, address=address[0..11], out=r1);
    RAM4K(in=in, load=loadR2, address=address[0..11], out=r2);
    RAM4K(in=in, load=loadR3, address=address[0..11], out=r3);
    RAM4K(in=in, load=loadR4, address=address[0..11], out=r4);
    RAM4K(in=in, load=loadR5, address=address[0..11], out=r5);
    RAM4K(in=in, load=loadR6, address=address[0..11], out=r6);
    RAM4K(in=in, load=loadR7, address=address[0..11], out=r7);
    RAM4K(in=in, load=loadR8, address=address[0..11], out=r8);
    Mux8Way16(a=r1, b=r2, c=r3, d=r4, e=r5, f=r6, g=r7, h=r8, sel=address[11..13], out=out);
}
